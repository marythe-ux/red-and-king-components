{"version":3,"file":"main.29addf91.iframe.bundle.js","mappings":";;;;;AAWA;;AAEA;;;AAKA;;;;;;;;ACRA;ACQA;AACA;AACA;AAOA;AACA;AACA;;;AASA;AACA;AACA;;;AAKA;AACA;AACA;;;AAMA;AACA;AACA;;;;;;;;AAaA;AACA;;AAEA;;AAEA","sources":["webpack://red-and-king-components/./src/theming/colors/Colors.tsx","webpack://red-and-king-components/./src/styles/GlobalStyles.tsx","webpack://red-and-king-components/./src/components/Button/Button.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { tier2 } from '../../styles/theme';\n\ninterface ColorCardProps {\n  colorName: 'white' | 'primary' | 'danger';\n}\nconst ColorCard = styled('span')<ColorCardProps>`\n  width: 40px;\n  height: 40px;\n  display: inline-block;\n  margin: 2px;\n  background-color: ${({ colorName }) => tier2.color[colorName]};\n  border: solid 1px #ccc;\n`;\n\nconst CardContainer = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Colors = () => (\n  <>\n    <CardContainer>\n      <ColorCard colorName=\"white\" /> <span>white</span>\n    </CardContainer>\n\n    <CardContainer>\n      <ColorCard colorName=\"primary\" /> <span>primary</span>\n    </CardContainer>\n\n    <CardContainer>\n      <ColorCard colorName=\"danger\" /> <span>danger</span>\n    </CardContainer>\n  </>\n);\n\nexport default Colors;\n","import { Global, css } from '@emotion/react';\n\nconst styles = css`\n  @import url('https://fonts.googleapis.com/css2?family=Signika&display=swap');\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Signika';\n  }\n`;\n\nconst GlobalStyles = () => <Global styles={styles} />;\n\nexport default GlobalStyles;\n","import styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport { tier3 } from '../../styles/theme';\n\ninterface ButtonStyledProps {\n  size?: 'small' | 'default' | 'large';\n  color?: 'primary' | 'secondary';\n}\ninterface ButtonProps extends ButtonStyledProps {\n  label: string;\n  onClick?: () => void;\n}\n\nconst styledPropHandler = {\n  color({ color }: ButtonStyledProps) {\n    switch (color) {\n      default:\n        return css`\n          color: ${tier3.button.color.primary.default};\n          background-color: ${tier3.button.background.primary.default};\n        `;\n    }\n  },\n  hoverColor({ color }: ButtonStyledProps) {\n    switch (color) {\n      default:\n        return css`\n          color: ${tier3.button.color.primary.hover};\n          background-color: ${tier3.button.background.primary.hover};\n        `;\n    }\n  },\n  size({ size }: ButtonStyledProps) {\n    switch (size) {\n      case 'small':\n        return css`\n          font-size: 14px;\n          line-height: 16px;\n          padding: ${tier3.button.padding.xSmall} ${tier3.button.padding.small};\n          border-radius: ${tier3.button.borderRadius.small};\n        `;\n      case 'large':\n        return css`\n          font-size: 24px;\n          line-height: 24px;\n          padding: ${tier3.button.padding.default} ${tier3.button.padding.large};\n          border-radius: ${tier3.button.borderRadius.large};\n        `;\n      case 'default':\n      default:\n        return css`\n          font-size: 14px;\n          line-height: 16px;\n          padding: ${tier3.button.padding.small} ${tier3.button.padding.default};\n          border-radius: ${tier3.button.borderRadius.default};\n        `;\n    }\n  },\n};\n\nexport const ButtonStyled = styled('button')<ButtonStyledProps>`\n  font-family: 'Signika';\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n  transition: color 0.5s ease, background-color 0.5s ease;\n  ${styledPropHandler.color}\n  ${styledPropHandler.size}\n  &:hover {\n    ${styledPropHandler.hoverColor}\n  }\n`;\n\nconst Button = ({ label, size, color, onClick }: ButtonProps) => (\n  <ButtonStyled color={color} onClick={onClick} size={size} type=\"button\">\n    {label}\n  </ButtonStyled>\n);\n\nexport default Button;\n"],"names":[],"sourceRoot":""}